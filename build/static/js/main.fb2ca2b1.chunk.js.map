{"version":3,"sources":["components/MyRestaurants/MyRestaurants.jsx","pages/Restaurants/Restaurants.jsx","components/LoginForm/LoginForm.jsx","components/SignUpForm/SignUpForm.jsx","pages/AuthPage/AuthPage.jsx","pages/AddRestaurantForm/AddRestaurantForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyRestaurants","state","restaurantList","a","jwt","localStorage","getItem","fetch","method","headers","fetchRestaurantsResponse","json","restaurant","console","log","this","setState","error","className","map","r","name","contactNumber","address","src","pictureURL","alt","Component","Restaurants","restaurants","registrationDate","cuisineType","paymentOptions","restaurantInfo","id","to","restaurantlist","React","LoginForm","email","password","handleChange","evt","target","value","handleSubmit","preventDefault","body","JSON","stringify","fetchResponse","ok","Error","token","setItem","userDoc","parse","atob","split","user","props","setUserInState","onSubmit","autoComplete","type","onChange","required","SignUpForm","confirm","history","push","disable","disabled","AuthPage","showLogin","onClick","AddRestaurantForm","redirect","addRestaurant","e","serverResponse","placeholder","App","incomingUserData","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb2ca2b1.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './MyRestaurants.css';\n\n\nclass MyRestaurants extends Component {\n    state = {\n        restaurantList: [],\n    };\n    async componentDidMount() {\n        try {\n            let jwt = localStorage.getItem('token')\n            let fetchRestaurantsResponse = await fetch('/api/restaurantRoutes/myrestaurants', {\n                method: \"GET\",\n                headers: {\"Content-Type\": \"application/json\",'Authorization': 'Bearer ' + jwt},\n              }) \n              let restaurant = await fetchRestaurantsResponse.json();   \n              console.log(restaurant)      \n              this.setState({ restaurantList: restaurant})\n            console.log(\"putting restaurant in state\")\n        } catch (err) {\n            console.error('ERROR:', err) // <-- log if error\n        }\n      }\n\n\n    render(){\n        return(\n            <main className=\"MyRestaurants\">\n                <nav className=\"MyRestaurantsNav\">\n                </nav>\n                    <h1>Restaurants</h1>  \n            <div className=\"swiper\">\n                <section className=\"restaurantInfo\">\n                    {this.state.restaurantList.map(r => {\n                       return (<div className=\"restaurant\">\n                            <h2 className=\"restName\">{r.name}</h2>\n                            <p className=\"restNumber\">{r.contactNumber}</p> \n                            <p className=\"restAddress\">{r.address}</p> \n                            <div className=\"imageContainer\">{<img src= {r.pictureURL} alt=\"\" className=\"image\"/>}</div><br></br><br></br><br></br><hr/>\n                        </div>)\n                    })}\n                </section>\n            </div>\n            </main>\n        )\n    }\n}\n\nexport default MyRestaurants;","import './Restaurants.css';\nimport React from 'react';\n// import AddRestaurant from '../../components/AddRestaurant/AddRestaurant';\nimport MyRestaurants from '../../components/MyRestaurants/MyRestaurants';\nimport { Link } from 'react-router-dom';\n// import UserLogOut  from '../../components/UserLogOut/UserLogOut';\n\n class Restaurants extends React.Component {\n  state = {\n    restaurants: [{\n      name: \"\",\n      registrationDate: \"\",\n      cuisineType: \"\",\n      address: \"\",\n      contactNumber: \"\", \n      paymentOptions: \"\",\n      restaurantInfo: \"\",\n      pictureURL: \"\",\n  }],\n} \n\nasync componentDidMount() {\n  try {\n      let jwt = localStorage.getItem('token')\n      let fetchRestaurantsResponse = await fetch('/api/restaurantRoutes/MyRestaurants', {\n        method: \"GET\",\n        headers: {\"Content-Type\": \"application/json\",'Authorization': 'Bearer ' + jwt},\n      }) \n      console.log(\"fetching something from my restuarants\")\n      let restaurants = await fetchRestaurantsResponse.json();\n      console.log(\"fetching restaurants response\")\n      this.setState({restaurantList: restaurants})\n      console.log(\"putting restaurant in state\")\n  } catch (err) {\n      console.error('ERROR:', err) // <-- log if error\n  }\n}\n\n  render() {\n    return (\n      <main className=\"Restaurants\">\n        <nav className=\"RestaurantsNav\">\n          <ul id=\"nav\">\n            <li><Link to ='../MyRestaurants'>Home</Link></li>\n            <li>Company</li>\n            <li><Link to ='../AddRestaurantForm'>Add Restaurant</Link></li>\n            <li><Link to ='../ContactUs/'>Contact Us</Link></li>\n          </ul>\n        </nav>\n        <div>\n          <MyRestaurants restaurantList={this.state.restaurantlist} />\n\n        </div>\n      </main>\n    )\n  }\n}\n\nexport default Restaurants;","import { Component } from 'react';\n\nclass LoginForm extends Component {\n  state = {\n    email: '',\n    password: '',\n    error: ''\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n      error: ''\n    });\n  };\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n      // 1. POST our new user info to the server\n      const fetchResponse = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email: this.state.email, password: this.state.password, })\n      })\n\n      // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n      if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request')\n\n      let token = await fetchResponse.json() // 3. decode fetch response: get jwt token from srv\n      localStorage.setItem('token', token);  // 4. Stick token into localStorage\n\n      const userDoc = JSON.parse(atob(token.split('.')[1])).user; // 5. Decode the token + put user document into state\n      this.props.setUserInState(userDoc)\n\n    } catch (err) {\n      console.log(\"SignupForm error\", err)\n      this.setState({ error: 'Sign Up Failed - Try Again' });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"form-container\" onSubmit={this.handleSubmit}>\n          <form autoComplete=\"off\" >\n            <label>Email</label>\n            <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n            <button type=\"submit\">LOG IN</button>\n          </form>\n        </div>\n        <p className=\"error-message\">&nbsp;{this.state.error}</p>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;","import { Component } from 'react';\n\nclass SignUpForm extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    confirm: '',\n    error: ''\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n      error: ''\n    });\n  };\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n      // 1. POST our new user info to the server\n      const fetchResponse = await fetch('/api/userRoutes/signup', {\n        method: 'POST',\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({name: this.state.name, email: this.state.email, password: this.state.password,})\n      })\n      console.log(\"sending login details to server\")\n      // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n      if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request')\n      // console.log(\"checking for server errors\")\n      let token = await fetchResponse.json() // 3. decode fetch response to get jwt from srv\n      localStorage.setItem('token', token);  // 4. Stick token into localStorage\n      // console.log(\"putting token into local storage\")\n      const userDoc = JSON.parse(atob(token.split('.')[1])).user; // 5. Decode the token + put user document into state\n      // console.log(\"decoding token and grabbing user from token\")\n      this.props.setUserInState(userDoc)\n      // console.log(\"putting user into state\")\n      this.props.history.push('/Restaurants')\n    } catch (err) { \n      // console.log(\"SignupForm error\", err)\n      this.setState({ error: 'Sign Up Failed - Try Again' });\n    } \n  }\n\n  render() {\n    const disable = this.state.password !== this.state.confirm;\n    return (\n      <div>\n        <div className=\"form-container\">\n          <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} required />\n            <label>Email</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n            <label>Confirm</label>\n            <input type=\"password\" name=\"confirm\" value={this.state.confirm} onChange={this.handleChange} required />\n            <button type=\"submit\" disabled={disable}>SIGN UP</button>\n          </form>\n        </div>\n        <p className=\"error-message\">&nbsp;{this.state.error}</p>\n      </div>\n    );\n  }\n}\n\n\nexport default SignUpForm;","import React from 'react'\nimport './AuthPage.css';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\n\nclass AuthPage extends React.Component {\n  state = {\n    showLogin: true,\n  }\n\n  render() {\n    return (\n      <main className=\"AuthPage\">\n        <div>\n          <button onClick={() => this.setState({ showLogin: !this.state.showLogin })}>\n            {this.state.showLogin ? 'CLICK HERE TO SIGN UP' : 'CLICK HERE TO LOG IN'}\n          </button>\n        </div>\n        {/* Another ternary operator! */}\n        {/* If showLogin is true, show the login form. If false, show the signup form */}\n        {this.state.showLogin ? \n        <LoginForm setUserInState={this.props.setUserInState}/> : \n        <SignUpForm setUserInState={this.props.setUserInState} />}\n      </main>\n    );\n  }\n}\n\nexport default AuthPage;","import { Component } from 'react';\nimport './AddRestaurantForm.css';\nimport { Link } from 'react-router-dom';\n\n\nclass AddRestaurantForm extends Component {\n\n   state = {\n        name: \"\", \n        registrationDate: \"\",\n        cuisineType: \"\",\n        address: \"\",\n        contactNumber:\"\",\n        paymentOptions: \"\",\n        restaurantInfo: \"\",\n        redirect: false,\n        // selectedFile: null\n    };\n\n    addRestaurant = async (e) => {\n        e.preventDefault();\n        console.log(\"before try\")\n        try {\n            console.log(\"before fetch\")\n        let fetchResponse = await fetch(\"/api/restaurantRoutes/addrestaurantform\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                // restaurants: this.state.restaurants,\n                name: this.state.name,\n                registrationDate: this.state.registrationDate,\n                cuisineType: this.state.cuisineType,\n                address: this.state.address,\n                contactNumber: this.state.contactNumber,\n                paymentOptions: this.state.paymentOptions,\n                restaurantInfo: this.state.restaurantInfo,\n                pictureURL: this.state.pictureURL,\n                }) // <-- send this object to server\n            }) \n            console.log(\"fetching response\")\n        let serverResponse = await fetchResponse.json() // <-- decode fetch response\n        console.log(\"Success, this is jireh:\", serverResponse)   // <-- log server response\n        // if the order was sent over without errors, set state to empty\n        } catch (err) {\n        console.error(\"Error:\", err) // <-- log if error \n        }\n  }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    render(){\n        return(\n            <main className=\"AddRestaurantForm\">\n                <nav className=\"AddRestaurantFormNav\">\n                    <ul id=\"arfNav\">\n                        <li><Link to ='../MyRestaurants'>Home</Link></li>\n                        <li>Company</li>\n                        <li><Link to ='../AddRestaurantForm/AddRestaurantForm.jsx'>Add Restaurant</Link></li>\n                        <li><Link to ='../ContactUs'>Contact Us</Link></li>\n                    </ul>\n                </nav>\n                <form onSubmit={this.addRestaurant}>\n                    <label>\n                        <p>Restaurant Name</p>\n                        <input name=\"name\"  placeholder=\"Lau's Cuisine\" value={this.state.name} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                        <p>Incorporation Date</p>\n                        <input type=\"date\" name=\"registrationDate\" value={this.state.registrationDate} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                        <p>Cuisine</p>\n                        <select name=\"cuisineType\" value={this.state.cuisineType} onChange={this.handleChange}>\n                            <option value=\"Japanese\">Japanese</option>\n                            <option value=\"Korean\">Korean</option>\n                            <option value=\"Chinese\">Chinese</option>\n                            <option value=\"American\">American</option>\n                            <option value=\"Indian\">Indian</option>\n                            <option value=\"Italian\">Italian</option>\n                            <option value=\"Middle Eastern\">Middle Eastern</option>        \n                            <option value=\"Others\">Others</option>        \n                        </select>    \n                    </label>\n                    <label>\n                    <p>Address</p>\n                        <input type=\"text\" name=\"address\" placeholder=\"123 Eats Way\" value={this.state.address} onChange={this.handleChange} />                  \n                    </label>\n                    <label>\n                    <p>Contact Number</p>\n                        <input type=\"text\" name=\"contactNumber\" placeholder=\"(416) 225-1234\" value={this.state.contactNumber} onChange={this.handleChange} />                  \n                    </label>\n                    <label>\n                    <p>Payment Options</p>\n                        <input type=\"text\" name=\"paymentOptions\" placeholder=\"Cash, Credit card, etc\" value={this.state.paymentOptions} onChange={this.handleChange} />                  \n                    </label>\n                    <label>\n                    <p>Additional Information</p>\n                        <input type=\"text\" name=\"restaurantInfo\" placeholder=\"Cash only, indoors and patio, etc\" value={this.state.restaurantInfo} onChange={this.handleChange} />                  \n                    </label> \n                    <label>\n                    <p>Insert Picture with URL</p>\n                        <input type=\"text\" name=\"pictureURL\" placeholder=\"Cash only, indoors and patio, etc\" value={this.state.pictureURL} onChange={this.handleChange} />                  \n                    </label> \n                    <br></br><br></br>\n\n                    <button onClick={this.addRestaurant}>Add Restaurant</button>\n                </form>\n            </main>\n        )\n        // return <RenderYourForm/>;\n    }\n}\n\nexport default AddRestaurantForm;\n\n\n\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Restaurants from './pages/Restaurants/Restaurants';\nimport AuthPage from './pages/AuthPage/AuthPage';\nimport AddRestaurantForm from './pages/AddRestaurantForm/AddRestaurantForm';\n\n\nclass App extends React.Component{\n  state = {\n    user:null,\n  }\n  \n  setUserInState = (incomingUserData) => {\n    this.setState({ user: incomingUserData})\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token')\n    if (token) {\n      // YOU DO: check expiry!\n      let userDoc = JSON.parse(atob(token.split('.')[1])).user // decode jwt token\n      this.setState({user: userDoc})      \n    }\n  }\n  \n  render() {\n    return (\n     <BrowserRouter>\n      <main className=\"App\">\n       \n        { this.state.user ? \n            <Switch>\n              <Route path='/restaurants' render={(props) => (\n                <Restaurants {...props}/>\n              )}/>\n              <Route path='/AddRestaurantForm' render={(props) => (\n                <AddRestaurantForm {...props}/>\n              )}/>\n\n              <Redirect to=\"/restaurants\" />\n            </Switch>\n          :\n          <div>\n            <Route path='/' render={(props) => (\n            <AuthPage setUserInState={this.setUserInState} {...props}/>\n            )}/>\n          </div>\n        }\n      </main>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}